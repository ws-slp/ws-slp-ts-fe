# name: Build and Test
# on:
#   push:
#     branches:
#       - main
#       - dev
#     paths-ignore:
#       - "docs/**"
#       - "mkdocs.yml"
#       - ".vscode/**"
#       - "catalog-info.yaml"
#       - "**.md"
#       - ".gitignore"
#   pull_request:
#     types: [opened, synchronize, reopened, ready_for_review]
#   release:
#     types: [published]

# jobs:
#   lint:
#     runs-on: ubuntu-latest
#     name: "lint"
#     needs: get-versions
#     if: ${{ !github.event.release }}
#     continue-on-error: true
#     strategy:
#       fail-fast: false
#       matrix:
#         experimental: [true]
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#       # Install Node
#       - uses: actions/setup-node@v2
#         with:
#           node-version: ${{ needs.get-versions.outputs.nodeVersion  }}
#           cache: "npm"
#           cache-dependency-path: "**/package-lock.json"
#       # Install NPM Dependencies
#       - name: Install npm dependencies.
#         run: |
#           npm i -g npm@${{  needs.get-versions.outputs.npmVersion  }}
#           npm ci
#       - name: Run Linting
#         run: npm run lint

# on:
#   push:
#     branches: [ $default-branch ]
#   pull_request:
#     branches: [ $default-branch ]

name: Node.js CI

on:
  push:
    branches:
      - main
      - dev
    paths-ignore:
      - "docs/**"
      - "mkdocs.yml"
      - ".vscode/**"
      - "catalog-info.yaml"
      - "**.md"
      - ".gitignore"
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  release:
    types: [published]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: cp .env.example .env.local && npm ci
    - run: npm run check-types
    - run: npm run lint
    # - run: npm test

  # check-types:
  #   runs-on: ubuntu-latest
  #   name: "check-types"
  #   needs: get-versions
  #   if: ${{ !github.event.release }}
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     # Install Node
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: ${{ needs.get-versions.outputs.nodeVersion  }}
  #         cache: "npm"
  #         cache-dependency-path: "**/package-lock.json"
  #     # Install NPM Dependencies
  #     - name: Install npm dependencies.
  #       run: |
  #         npm i -g npm@${{  needs.get-versions.outputs.npmVersion  }}
  #         npm ci
  #     - run: npm run check-types
  #     - run: npm run lint
